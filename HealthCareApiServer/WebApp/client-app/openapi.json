{
  "x-generator": "NSwag v14.6.1.0 (NJsonSchema v11.5.1.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "My API",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:44351"
    }
  ],
  "paths": {
    "/api/Appointment/GetCurrentPatientAppointments": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "operationId": "Appointment_GetCurrentPatientAppointments",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentModel"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Appointment/Book": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "operationId": "Appointment_Book",
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Appointment/UpdateStatus": {
      "put": {
        "tags": [
          "Appointment"
        ],
        "operationId": "Appointment_UpdateStatus",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Appointment": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "operationId": "Appointment_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentModel"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Appointment"
        ],
        "operationId": "Appointment_Post",
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Appointment/{id}": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "operationId": "Appointment_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Appointment"
        ],
        "operationId": "Appointment_Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Appointment"
        ],
        "operationId": "Appointment_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Department": {
      "get": {
        "tags": [
          "Department"
        ],
        "operationId": "Department_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepartmentModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Department"
        ],
        "operationId": "Department_Post",
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Department/{id}": {
      "get": {
        "tags": [
          "Department"
        ],
        "operationId": "Department_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Department"
        ],
        "operationId": "Department_Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Department"
        ],
        "operationId": "Department_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Doctor/Create": {
      "post": {
        "tags": [
          "Doctor"
        ],
        "operationId": "Doctor_Create",
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDoctorModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Doctor/GetAppointmentsForDoctor": {
      "get": {
        "tags": [
          "Doctor"
        ],
        "operationId": "Doctor_GetAppointmentsForDoctor",
        "parameters": [
          {
            "name": "doctorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "month",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Doctor": {
      "get": {
        "tags": [
          "Doctor"
        ],
        "operationId": "Doctor_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DoctorModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Doctor"
        ],
        "operationId": "Doctor_Post",
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoctorModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Doctor/{id}": {
      "get": {
        "tags": [
          "Doctor"
        ],
        "operationId": "Doctor_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoctorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Doctor"
        ],
        "operationId": "Doctor_Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoctorModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Doctor"
        ],
        "operationId": "Doctor_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Home": {
      "get": {
        "tags": [
          "Home"
        ],
        "operationId": "Home_Index",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": [
              "Admin"
            ]
          }
        ]
      }
    },
    "/api/Hospital": {
      "post": {
        "tags": [
          "Hospital"
        ],
        "operationId": "Hospital_Post",
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HospitalModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": [
              "Admin"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Hospital"
        ],
        "operationId": "Hospital_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HospitalModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Hospital/{id}": {
      "put": {
        "tags": [
          "Hospital"
        ],
        "operationId": "Hospital_Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HospitalModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": [
              "Admin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Hospital"
        ],
        "operationId": "Hospital_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": [
              "Admin"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Hospital"
        ],
        "operationId": "Hospital_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HospitalModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Identity/Login": {
      "post": {
        "tags": [
          "Identity"
        ],
        "operationId": "Identity_Login",
        "requestBody": {
          "x-name": "model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Identity/Register": {
      "post": {
        "tags": [
          "Identity"
        ],
        "operationId": "Identity_Register",
        "requestBody": {
          "x-name": "model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserRequestModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Identity/Logout": {
      "post": {
        "tags": [
          "Identity"
        ],
        "operationId": "Identity_Logout",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Identity/Verify": {
      "post": {
        "tags": [
          "Identity"
        ],
        "operationId": "Identity_Verify",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Identity/Roles": {
      "get": {
        "tags": [
          "Identity"
        ],
        "operationId": "Identity_Roles",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAndRoles"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Prescription/Mine": {
      "get": {
        "tags": [
          "Prescription"
        ],
        "operationId": "Prescription_GetForCurrentPatient",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Prescription/GetPrescriptionsByAppointmentId": {
      "get": {
        "tags": [
          "Prescription"
        ],
        "operationId": "Prescription_GetPrescriptionsByAppointmentId",
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Prescription": {
      "get": {
        "tags": [
          "Prescription"
        ],
        "operationId": "Prescription_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Prescription"
        ],
        "operationId": "Prescription_Post",
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrescriptionModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Prescription/{id}": {
      "get": {
        "tags": [
          "Prescription"
        ],
        "operationId": "Prescription_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrescriptionModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Prescription"
        ],
        "operationId": "Prescription_Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrescriptionModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Prescription"
        ],
        "operationId": "Prescription_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/PrescriptionIntake/ByPrescription/{prescriptionId}": {
      "get": {
        "tags": [
          "PrescriptionIntake"
        ],
        "operationId": "PrescriptionIntake_GetByPrescription",
        "parameters": [
          {
            "name": "prescriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionIntakeModel"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PrescriptionIntake/Mark": {
      "post": {
        "tags": [
          "PrescriptionIntake"
        ],
        "operationId": "PrescriptionIntake_Mark",
        "requestBody": {
          "x-name": "model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrescriptionIntakeModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrescriptionIntakeModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/PrescriptionIntake": {
      "get": {
        "tags": [
          "PrescriptionIntake"
        ],
        "operationId": "PrescriptionIntake_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrescriptionIntakeModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PrescriptionIntake"
        ],
        "operationId": "PrescriptionIntake_Post",
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrescriptionIntakeModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/PrescriptionIntake/{id}": {
      "get": {
        "tags": [
          "PrescriptionIntake"
        ],
        "operationId": "PrescriptionIntake_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrescriptionIntakeModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrescriptionIntake"
        ],
        "operationId": "PrescriptionIntake_Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrescriptionIntakeModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PrescriptionIntake"
        ],
        "operationId": "PrescriptionIntake_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/User": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_Post",
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "User_Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "requestModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "operationId": "User_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/Values": {
      "get": {
        "tags": [
          "Values"
        ],
        "operationId": "Values_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Values"
        ],
        "operationId": "Values_Post",
        "requestBody": {
          "x-name": "value",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/Values/{id}": {
      "get": {
        "tags": [
          "Values"
        ],
        "operationId": "Values_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Values"
        ],
        "operationId": "Values_Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "value",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "Values"
        ],
        "operationId": "Values_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "WeatherForecast_Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Doctor"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AppointmentModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "dateTime",
              "status",
              "patientId",
              "doctorId"
            ],
            "properties": {
              "dateTime": {
                "type": "string",
                "format": "date-time",
                "minLength": 1
              },
              "reason": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "$ref": "#/components/schemas/AppointmentStatus"
              },
              "patientId": {
                "type": "integer",
                "format": "int32"
              },
              "patient": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PatientModel"
                  }
                ]
              },
              "doctorId": {
                "type": "integer",
                "format": "int32"
              },
              "doctorName": {
                "type": "string",
                "nullable": true
              },
              "notes": {
                "type": "string",
                "nullable": true
              },
              "prescriptions": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/PrescriptionModel"
                }
              }
            }
          }
        ]
      },
      "AppointmentStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Upcoming",
          "Completed",
          "Canceled"
        ],
        "x-enum-descriptions": [
          "Upcoming",
          null,
          null
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "PatientModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "userId": {
                "type": "integer",
                "format": "int32"
              },
              "firstName": {
                "type": "string",
                "nullable": true
              },
              "lastName": {
                "type": "string",
                "nullable": true
              },
              "fullName": {
                "type": "string",
                "nullable": true
              },
              "email": {
                "type": "string",
                "nullable": true
              },
              "prescriptions": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/PrescriptionModel"
                }
              }
            }
          }
        ]
      },
      "PrescriptionModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "name",
              "patientId"
            ],
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1
              },
              "dose": {
                "type": "string",
                "nullable": true
              },
              "patientId": {
                "type": "integer",
                "format": "int32"
              },
              "appointmentId": {
                "type": "integer",
                "format": "int32"
              },
              "startDate": {
                "type": "string",
                "format": "date-time"
              },
              "durationInDays": {
                "type": "integer",
                "format": "int32"
              },
              "times": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "isActive": {
                "type": "boolean"
              },
              "intakes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/PrescriptionIntakeModel"
                }
              }
            }
          }
        ]
      },
      "PrescriptionIntakeModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "prescriptionId"
            ],
            "properties": {
              "prescriptionId": {
                "type": "integer",
                "format": "int32"
              },
              "scheduledFor": {
                "type": "string",
                "format": "date-time"
              },
              "takenAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "prescriptionIsActive": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "EntityModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateAppointmentModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "dateTime",
          "doctorId"
        ],
        "properties": {
          "dateTime": {
            "type": "string",
            "format": "date-time",
            "minLength": 1
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "patientId": {
            "type": "integer",
            "format": "int32"
          },
          "doctorId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateAppointmentModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "$ref": "#/components/schemas/AppointmentStatus"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "prescriptions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PrescriptionModel"
            }
          }
        }
      },
      "DepartmentModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateDoctorModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RegisterUserRequestModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "hospitalId": {
                "type": "integer",
                "format": "int32"
              },
              "departmentId": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "RegisterUserRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "username",
          "email",
          "password"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string",
            "minLength": 1
          },
          "username": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "DoctorModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "userId",
              "hospitalId",
              "departmentId"
            ],
            "properties": {
              "userId": {
                "type": "integer",
                "format": "int32"
              },
              "firstName": {
                "type": "string",
                "nullable": true
              },
              "lastName": {
                "type": "string",
                "nullable": true
              },
              "hospitalId": {
                "type": "integer",
                "format": "int32"
              },
              "hospitalName": {
                "type": "string",
                "nullable": true
              },
              "departmentId": {
                "type": "integer",
                "format": "int32"
              },
              "departmentName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "HospitalModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "LoginRequestModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "UserAndRoles": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "roles": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UserModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "firstName": {
                "type": "string",
                "nullable": true
              },
              "lastName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "Doctor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "userId",
              "hospitalId",
              "departmentId"
            ],
            "properties": {
              "userId": {
                "type": "integer",
                "format": "int32"
              },
              "user": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/User"
                  }
                ]
              },
              "hospitalId": {
                "type": "integer",
                "format": "int32"
              },
              "hospital": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Hospital"
                  }
                ]
              },
              "departmentId": {
                "type": "integer",
                "format": "int32"
              },
              "department": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Department"
                  }
                ]
              },
              "appointments": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        ]
      },
      "User": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdentityUserOfInteger"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "firstName",
              "lastName",
              "createdBy",
              "modifiedBy"
            ],
            "properties": {
              "firstName": {
                "type": "string",
                "minLength": 1
              },
              "lastName": {
                "type": "string",
                "minLength": 1
              },
              "createdBy": {
                "type": "string",
                "minLength": 1
              },
              "createdOn": {
                "type": "string",
                "format": "date-time"
              },
              "modifiedBy": {
                "type": "string",
                "minLength": 1
              },
              "modifiedOn": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "IdentityUserOfInteger": {
        "type": "object",
        "description": "Represents a user in the identity system",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gets or sets the primary key for this user.",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "Gets or sets the user name for this user.",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "description": "Gets or sets the normalized user name for this user.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Gets or sets the email address for this user.",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "description": "Gets or sets the normalized email address for this user.",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean",
            "description": "Gets or sets a flag indicating if a user has confirmed their email address."
          },
          "passwordHash": {
            "type": "string",
            "description": "Gets or sets a salted and hashed representation of the password for this user.",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "description": "A random value that must change whenever a users credentials change (password changed, login removed)",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "description": "A random value that must change whenever a user is persisted to the store",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "Gets or sets a telephone number for the user.",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean",
            "description": "Gets or sets a flag indicating if a user has confirmed their telephone address."
          },
          "twoFactorEnabled": {
            "type": "boolean",
            "description": "Gets or sets a flag indicating if two factor authentication is enabled for this user."
          },
          "lockoutEnd": {
            "type": "string",
            "description": "Gets or sets the date and time, in UTC, when any user lockout ends.",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean",
            "description": "Gets or sets a flag indicating if the user could be locked out."
          },
          "accessFailedCount": {
            "type": "integer",
            "description": "Gets or sets the number of failed login attempts for the current user.",
            "format": "int32"
          }
        }
      },
      "Hospital": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1
              },
              "doctors": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Doctor"
                }
              }
            }
          }
        ]
      },
      "Entity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "type": "string",
            "nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Department": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "Appointment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "dateTime": {
                "type": "string",
                "format": "date-time"
              },
              "reason": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "$ref": "#/components/schemas/AppointmentStatus"
              },
              "notes": {
                "type": "string",
                "nullable": true
              },
              "patientId": {
                "type": "integer",
                "format": "int32"
              },
              "patient": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Patient"
                  }
                ]
              },
              "doctorId": {
                "type": "integer",
                "format": "int32"
              },
              "doctor": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Doctor"
                  }
                ]
              },
              "prescriptions": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Prescription"
                }
              }
            }
          }
        ]
      },
      "Patient": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "userId"
            ],
            "properties": {
              "userId": {
                "type": "integer",
                "format": "int32"
              },
              "user": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/User"
                  }
                ]
              },
              "appointments": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Appointment"
                }
              },
              "prescriptions": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Prescription"
                }
              }
            }
          }
        ]
      },
      "Prescription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1
              },
              "dose": {
                "type": "string",
                "nullable": true
              },
              "patientId": {
                "type": "integer",
                "format": "int32"
              },
              "patient": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Patient"
                  }
                ]
              },
              "appointmentId": {
                "type": "integer",
                "format": "int32"
              },
              "appointment": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Appointment"
                  }
                ]
              },
              "startDate": {
                "type": "string",
                "format": "date-time"
              },
              "durationInDays": {
                "type": "integer",
                "format": "int32"
              },
              "times": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "isActive": {
                "type": "boolean"
              },
              "intakes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/PrescriptionIntake"
                }
              }
            }
          }
        ]
      },
      "PrescriptionIntake": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "prescriptionId": {
                "type": "integer",
                "format": "int32"
              },
              "prescription": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Prescription"
                  }
                ]
              },
              "scheduledFor": {
                "type": "string",
                "format": "date-time"
              },
              "takenAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ]
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "http",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}